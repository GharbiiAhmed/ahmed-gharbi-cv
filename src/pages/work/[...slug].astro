---
import { CollectionEntry, getCollection } from 'astro:content';

import BaseLayout from '../../layouts/BaseLayout.astro';

import ContactCTA from '../../components/ContactCTA.astro';
import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';
import Pill from '../../components/Pill.astro';

interface Props {
	entry: CollectionEntry<'work'>;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
	const work = await getCollection('work');
	return work.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
	<div class="stack gap-20">
		<div class="stack gap-15">
			<header>
				<div class="wrapper stack gap-4">
					<a class="back-link" href="/work/"><Icon icon="arrow-left" /> Back to Work</a>
					<Hero title={entry.data.title} align="start">
						<div class="details">
							<div class="tags">
								{entry.data.tags?.map((t: string) => <Pill>{t}</Pill>)}
							</div>
							<p class="description">{entry.data.description}</p>
						</div>
					</Hero>
				</div>
			</header>
			<main class="wrapper">
				<div class="stack gap-10 content">
					{entry.data.image && (
						<img 
							src={entry.data.image.src} 
							alt={entry.data.image.alt || ''} 
							class="featured-image"
						/>
					)}
					<div class="content">
						<Content />
					</div>
				</div>
			</main>
		</div>
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
		background: var(--gradient-subtle);
	}

	.back-link {
		display: inline-flex;
		align-items: center;
		gap: 0.5rem;
		color: var(--gray-400);
		font-size: var(--text-sm);
		transition: color var(--theme-transition);
	}

	.back-link:hover {
		color: var(--gray-0);
	}

	.details {
		display: flex;
		flex-direction: column;
		padding: 1rem;
		gap: 1.5rem;
		justify-content: space-between;
		align-items: flex-start;
		background: var(--gray-999_40);
		border-radius: 1rem;
		border: 1px solid var(--gray-800);
	}

	.tags {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
	}

	.description {
		font-size: var(--text-lg);
		max-width: 54ch;
		color: var(--gray-300);
		line-height: 1.6;
	}

	.content {
		max-width: 65ch;
		margin-inline: auto;
	}

	.featured-image {
		width: 100%;
		height: auto;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-md);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.content > :global(* + *) {
		margin-top: 1.5rem;
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4),
	.content :global(h5) {
		margin: 2rem 0 1rem;
		color: var(--gray-0);
	}

	.content :global(h2) {
		font-size: var(--text-2xl);
		border-bottom: 1px solid var(--gray-800);
		padding-bottom: 0.5rem;
	}

	.content :global(h3) {
		font-size: var(--text-xl);
		color: var(--gray-100);
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.4;
		padding: 1.5rem;
		border-radius: 1rem;
		background: var(--gray-999_40);
		border: 1px solid var(--gray-800);
		color: var(--gray-0);
	}

	.content :global(strong) {
		color: var(--gray-0);
		font-weight: 600;
	}

	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
		color: var(--accent-regular);
	}

	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	@media (min-width: 50em) {
		.details {
			flex-direction: row;
			gap: 2.5rem;
			padding: 2rem;
		}

		.content :global(blockquote) {
			font-size: var(--text-2xl);
			padding: 2rem;
		}

		.content :global(h2) {
			font-size: var(--text-3xl);
		}

		.content :global(h3) {
			font-size: var(--text-2xl);
		}
	}
</style>
